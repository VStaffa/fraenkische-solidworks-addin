<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>