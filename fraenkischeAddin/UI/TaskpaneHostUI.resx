<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>